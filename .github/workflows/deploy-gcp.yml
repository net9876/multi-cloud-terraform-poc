name: Deploy or Destroy to Google Cloud

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action (apply/destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
          create_credentials_file: true

      - name: Debug Credentials
        run: |
          echo "Credentials file exists: $(test -f ${{ steps.auth.outputs.credentials_file }} && echo 'yes' || echo 'no')"
          echo "Credentials file path: ${{ steps.auth.outputs.credentials_file }}"

      - name: Create Backend Config
        run: |
          cd gcloud
          cat > backend.hcl <<EOF
          bucket = "tf-state-bucket-1738864366"
          prefix = "terraform/state"
          credentials = "${{ steps.auth.outputs.credentials_file }}"
          access_token = "${{ steps.auth.outputs.access_token }}"
          EOF
          cat backend.hcl

      - name: Terraform Init
        run: |
          cd gcloud
          terraform init \
            -backend-config=backend.hcl
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file }}
          GOOGLE_OAUTH_ACCESS_TOKEN: ${{ steps.auth.outputs.access_token }}

      - name: Terraform Plan
        run: |
          cd gcloud
          terraform plan \
            -var="credentials_json=${{ steps.auth.outputs.credentials_file }}" \
            -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var="region=${{ secrets.GCP_REGION }}"
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file }}
          GOOGLE_OAUTH_ACCESS_TOKEN: ${{ steps.auth.outputs.access_token }}

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        run: |
          cd gcloud
          terraform apply -auto-approve \
            -var="credentials_json=${{ steps.auth.outputs.credentials_file }}" \
            -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var="region=${{ secrets.GCP_REGION }}"
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file }}
          GOOGLE_OAUTH_ACCESS_TOKEN: ${{ steps.auth.outputs.access_token }}

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: |
          cd gcloud
          terraform destroy -auto-approve \
            -var="credentials_json=${{ steps.auth.outputs.credentials_file }}" \
            -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var="region=${{ secrets.GCP_REGION }}"
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file }}
          GOOGLE_OAUTH_ACCESS_TOKEN: ${{ steps.auth.outputs.access_token }}